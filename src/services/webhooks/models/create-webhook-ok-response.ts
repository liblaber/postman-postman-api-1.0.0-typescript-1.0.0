// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  createWebhookWebhook2,
  createWebhookWebhook2Request,
  createWebhookWebhook2Response,
} from './create-webhook-webhook-2';

/**
 * The shape of the model inside the application code - what the users use
 */
export const createWebhookOkResponse = z.object({
  webhook: createWebhookWebhook2.optional(),
});

/**
 *
 * @typedef  {CreateWebhookOkResponse} createWebhookOkResponse
 * @property {CreateWebhookWebhook2}
 */
export type CreateWebhookOkResponse = z.infer<typeof createWebhookOkResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const createWebhookOkResponseResponse = z
  .object({
    webhook: createWebhookWebhook2Response.optional(),
  })
  .transform((data) => ({
    webhook: data['webhook'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const createWebhookOkResponseRequest = z
  .object({ webhook: createWebhookWebhook2Request.nullish() })
  .transform((data) => ({
    webhook: data['webhook'],
  }));
