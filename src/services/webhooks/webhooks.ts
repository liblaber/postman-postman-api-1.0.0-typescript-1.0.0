// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse } from '../../http';
import { RequestConfig } from '../../http/types';
import { Request } from '../../http/transport/request';
import { CreateWebhookRequest, createWebhookRequestRequest } from './models/create-webhook-request';
import { CreateWebhookOkResponse, createWebhookOkResponseResponse } from './models/create-webhook-ok-response';
import { CreateWebhookParams } from './request-params';

export class WebhooksService extends BaseService {
  /**
   * Creates a webhook that triggers a collection with a custom payload. You can get the webhook's URL from the `webhookUrl` property in the endpoint's response.
   * @param {string} [workspace] - The workspace's ID.
   * @returns {Promise<HttpResponse<CreateWebhookOkResponse>>} Successful Response
   */
  async createWebhook(
    body: CreateWebhookRequest,
    params?: CreateWebhookParams,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<CreateWebhookOkResponse>> {
    const request = new Request({
      method: 'POST',
      body,
      path: '/webhooks',
      config: this.config,
      responseSchema: createWebhookOkResponseResponse,
      requestSchema: createWebhookRequestRequest,
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      requestConfig,
    });
    request.addQueryParam('workspace', params?.workspace);
    request.addHeaderParam('Content-Type', 'application/json');
    return this.client.call<CreateWebhookOkResponse>(request);
  }
}
