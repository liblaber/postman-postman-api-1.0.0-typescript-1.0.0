// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  deleteCollectionCollection,
  deleteCollectionCollectionRequest,
  deleteCollectionCollectionResponse,
} from './delete-collection-collection';

/**
 * The shape of the model inside the application code - what the users use
 */
export const deleteCollection = z.lazy(() => {
  return z.object({
    collection: deleteCollectionCollection.optional(),
  });
});

/**
 *
 * @typedef  {DeleteCollection} deleteCollection
 * @property {DeleteCollectionCollection} - Information about the deleted collection.
 */
export type DeleteCollection = z.infer<typeof deleteCollection>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const deleteCollectionResponse = z.lazy(() => {
  return z
    .object({
      collection: deleteCollectionCollectionResponse.optional(),
    })
    .transform((data) => ({
      collection: data['collection'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const deleteCollectionRequest = z.lazy(() => {
  return z.object({ collection: deleteCollectionCollectionRequest.nullish() }).transform((data) => ({
    collection: data['collection'],
  }));
});
