// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const collectionItem = z.object({
  request: z.any(),
});

/**
 *
 * @typedef  {CollectionItem} collectionItem
 * @property {any} - The collection's request information. For a complete list of values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.
 */
export type CollectionItem = z.infer<typeof collectionItem>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const collectionItemResponse = z
  .object({
    request: z.any(),
  })
  .transform((data) => ({
    request: data['request'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const collectionItemRequest = z.object({ request: z.any().nullish() }).transform((data) => ({
  request: data['request'],
}));
