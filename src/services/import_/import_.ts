// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse, RequestConfig } from '../../http/types';
import { RequestBuilder } from '../../http/transport/request-builder';
import { SerializationStyle } from '../../http/serialization/base-serializer';
import {
  ImportOpenApiDefinitionRequest,
  importOpenApiDefinitionRequestRequest,
} from './models/import-open-api-definition-request';
import {
  ImportOpenApiDefinitionOkResponse,
  importOpenApiDefinitionOkResponseResponse,
} from './models/import-open-api-definition-ok-response';
import { ImportOpenApiDefinitionParams } from './request-params';

export class Import_Service extends BaseService {
  /**
   * Imports an OpenAPI definition into Postman as a new [Postman Collection](https://learning.postman.com/docs/getting-started/creating-the-first-collection/).
   * @param {string} [workspace] - The workspace's ID.
   * @returns {Promise<HttpResponse<ImportOpenApiDefinitionOkResponse>>} Successful Response
   */
  async importOpenApiDefinition(
    body: ImportOpenApiDefinitionRequest,
    params?: ImportOpenApiDefinitionParams,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<ImportOpenApiDefinitionOkResponse>> {
    const request = new RequestBuilder<ImportOpenApiDefinitionOkResponse>()
      .setConfig(this.config)
      .setBaseUrl(this.config)
      .setMethod('POST')
      .setPath('/import/openapi')
      .setRequestSchema(importOpenApiDefinitionRequestRequest)
      .setResponseSchema(importOpenApiDefinitionOkResponseResponse)
      .setRequestContentType(ContentType.Json)
      .setResponseContentType(ContentType.Json)
      .setRetryAttempts(this.config, requestConfig)
      .setRetryDelayMs(this.config, requestConfig)
      .setResponseValidation(this.config, requestConfig)
      .addQueryParam({
        key: 'workspace',
        value: params?.workspace,
      })
      .addHeaderParam({ key: 'Content-Type', value: 'application/json' })
      .addBody(body)
      .build();
    return this.client.call<ImportOpenApiDefinitionOkResponse>(request);
  }
}
