// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse } from '../../http';
import { RequestConfig } from '../../http/types';
import { Request } from '../../http/transport/request';
import {
  ImportOpenApiDefinitionRequest,
  importOpenApiDefinitionRequestRequest,
} from './models/import-open-api-definition-request';
import {
  ImportOpenApiDefinitionOkResponse,
  importOpenApiDefinitionOkResponseResponse,
} from './models/import-open-api-definition-ok-response';
import { ImportOpenApiDefinitionParams } from './request-params';

export class Import_Service extends BaseService {
  /**
   * Imports an OpenAPI definition into Postman as a new [Postman Collection](https://learning.postman.com/docs/getting-started/creating-the-first-collection/).
   * @param {string} [workspace] - The workspace's ID.
   * @returns {Promise<HttpResponse<ImportOpenApiDefinitionOkResponse>>} Successful Response
   */
  async importOpenApiDefinition(
    body: ImportOpenApiDefinitionRequest,
    params?: ImportOpenApiDefinitionParams,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<ImportOpenApiDefinitionOkResponse>> {
    const request = new Request({
      method: 'POST',
      body,
      path: '/import/openapi',
      config: this.config,
      responseSchema: importOpenApiDefinitionOkResponseResponse,
      requestSchema: importOpenApiDefinitionRequestRequest,
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      requestConfig,
    });
    request.addQueryParam('workspace', params?.workspace);
    request.addHeaderParam('Content-Type', 'application/json');
    return this.client.call<ImportOpenApiDefinitionOkResponse>(request);
  }
}
