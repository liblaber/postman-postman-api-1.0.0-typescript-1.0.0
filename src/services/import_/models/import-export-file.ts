// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { importExportFileType } from './import-export-file-type';

/**
 * The shape of the model inside the application code - what the users use
 */
export const importExportFile = z.object({
  type_: importExportFileType,
  input: z.instanceof(ArrayBuffer),
});

/**
 *
 * @typedef  {ImportExportFile} importExportFile
 * @property {ImportExportFileType} - The `file` type value.
 * @property {ArrayBuffer} - A file containing a valid user's export .zip file.
 */
export type ImportExportFile = z.infer<typeof importExportFile>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const importExportFileResponse = z
  .object({
    type: importExportFileType,
    input: z.instanceof(ArrayBuffer),
  })
  .transform((data) => ({
    type_: data['type'],
    input: data['input'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const importExportFileRequest = z
  .object({ type_: importExportFileType.nullish(), input: z.instanceof(ArrayBuffer).nullish() })
  .transform((data) => ({
    type: data['type_'],
    input: data['input'],
  }));
