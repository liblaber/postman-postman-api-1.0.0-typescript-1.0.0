// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  updateWorkspaceRolesRoles1,
  updateWorkspaceRolesRoles1Request,
  updateWorkspaceRolesRoles1Response,
} from './update-workspace-roles-roles-1';

/**
 * The shape of the model inside the application code - what the users use
 */
export const updateWorkspaceRolesRequest = z.object({
  roles: z.array(updateWorkspaceRolesRoles1).optional(),
});

/**
 *
 * @typedef  {UpdateWorkspaceRolesRequest} updateWorkspaceRolesRequest
 * @property {UpdateWorkspaceRolesRoles1[]}
 */
export type UpdateWorkspaceRolesRequest = z.infer<typeof updateWorkspaceRolesRequest>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const updateWorkspaceRolesRequestResponse = z
  .object({
    roles: z.array(updateWorkspaceRolesRoles1Response).optional(),
  })
  .transform((data) => ({
    roles: data['roles'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const updateWorkspaceRolesRequestRequest = z
  .object({ roles: z.array(updateWorkspaceRolesRoles1Request).nullish() })
  .transform((data) => ({
    roles: data['roles'],
  }));
