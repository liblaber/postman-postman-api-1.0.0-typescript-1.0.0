// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  deleteWorkspaceWorkspace,
  deleteWorkspaceWorkspaceRequest,
  deleteWorkspaceWorkspaceResponse,
} from './delete-workspace-workspace';

/**
 * The shape of the model inside the application code - what the users use
 */
export const deleteWorkspace = z.object({
  workspace: deleteWorkspaceWorkspace.optional(),
});

/**
 *
 * @typedef  {DeleteWorkspace} deleteWorkspace
 * @property {DeleteWorkspaceWorkspace} - Information about the deleted workspace.
 */
export type DeleteWorkspace = z.infer<typeof deleteWorkspace>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const deleteWorkspaceResponse = z
  .object({
    workspace: deleteWorkspaceWorkspaceResponse.optional(),
  })
  .transform((data) => ({
    workspace: data['workspace'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const deleteWorkspaceRequest = z
  .object({ workspace: deleteWorkspaceWorkspaceRequest.nullish() })
  .transform((data) => ({
    workspace: data['workspace'],
  }));
