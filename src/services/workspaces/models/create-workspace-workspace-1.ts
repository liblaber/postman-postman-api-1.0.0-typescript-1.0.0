// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { workspaceType1 } from './workspace-type-1';

/**
 * The shape of the model inside the application code - what the users use
 */
export const createWorkspaceWorkspace1 = z.object({
  name: z.string(),
  type_: workspaceType1,
  description: z.string().optional(),
});

/**
 * Information about the workspace.
 * @typedef  {CreateWorkspaceWorkspace1} createWorkspaceWorkspace1 - Information about the workspace. - Information about the workspace.
 * @property {string} - The workspace's name.
 * @property {WorkspaceType1} - The type of workspace:
- `personal`
- `private` — Private workspaces are available on Postman [**Professional** and **Enterprise** plans](https://www.postman.com/pricing).
- `public`
- `team`
- `partner` — [Partner Workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) are available on Postman [**Professional** and **Enterprise** plans](https://www.postman.com/pricing)).

 * @property {string} - The workspace's description.
 */
export type CreateWorkspaceWorkspace1 = z.infer<typeof createWorkspaceWorkspace1>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const createWorkspaceWorkspace1Response = z
  .object({
    name: z.string(),
    type: workspaceType1,
    description: z.string().optional(),
  })
  .transform((data) => ({
    name: data['name'],
    type_: data['type'],
    description: data['description'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const createWorkspaceWorkspace1Request = z
  .object({ name: z.string().nullish(), type_: workspaceType1.nullish(), description: z.string().nullish() })
  .transform((data) => ({
    name: data['name'],
    type: data['type_'],
    description: data['description'],
  }));
