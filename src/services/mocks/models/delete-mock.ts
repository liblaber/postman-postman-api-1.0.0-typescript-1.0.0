// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { deleteMockMock, deleteMockMockRequest, deleteMockMockResponse } from './delete-mock-mock';

/**
 * The shape of the model inside the application code - what the users use
 */
export const deleteMock = z.lazy(() => {
  return z.object({
    mock: deleteMockMock.optional(),
  });
});

/**
 *
 * @typedef  {DeleteMock} deleteMock
 * @property {DeleteMockMock} - Information about the mock server.
 */
export type DeleteMock = z.infer<typeof deleteMock>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const deleteMockResponse = z.lazy(() => {
  return z
    .object({
      mock: deleteMockMockResponse.optional(),
    })
    .transform((data) => ({
      mock: data['mock'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const deleteMockRequest = z.lazy(() => {
  return z.object({ mock: deleteMockMockRequest.nullish() }).transform((data) => ({
    mock: data['mock'],
  }));
});
