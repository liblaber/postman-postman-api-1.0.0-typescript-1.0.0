// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const responseBody = z.object({
  data: z.string().optional(),
});

/**
 * The response's body information.
 * @typedef  {ResponseBody} responseBody - The response's body information. - The response's body information.
 * @property {string} - The response body's contents.
 */
export type ResponseBody = z.infer<typeof responseBody>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const responseBodyResponse = z
  .object({
    data: z.string().optional(),
  })
  .transform((data) => ({
    data: data['data'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const responseBodyRequest = z.object({ data: z.string().nullish() }).transform((data) => ({
  data: data['data'],
}));
