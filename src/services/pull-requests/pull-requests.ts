// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse, RequestConfig } from '../../http/types';
import { RequestBuilder } from '../../http/transport/request-builder';
import { SerializationStyle } from '../../http/serialization/base-serializer';
import { PullRequestGet, pullRequestGetResponse } from './models/pull-request-get';
import { PullRequestUpdate, pullRequestUpdateRequest } from './models/pull-request-update';
import { PullRequestUpdated, pullRequestUpdatedResponse } from './models/pull-request-updated';

export class PullRequestsService extends BaseService {
  /**
   * Gets information about a pull request, such as the source and destination details, who reviewed the pull request, the merge's current status, and whether the element is accessible.
   * @param {string} pullRequestId - The pull request's ID.
   * @returns {Promise<HttpResponse<PullRequestGet>>} Successful Response
   */
  async getPullRequest(pullRequestId: string, requestConfig?: RequestConfig): Promise<HttpResponse<PullRequestGet>> {
    const request = new RequestBuilder<PullRequestGet>()
      .setConfig(this.config)
      .setBaseUrl(this.config)
      .setMethod('GET')
      .setPath('/pull-requests/{pullRequestId}')
      .setRequestSchema(z.any())
      .setResponseSchema(pullRequestGetResponse)
      .setRequestContentType(ContentType.Json)
      .setResponseContentType(ContentType.Json)
      .setRetryAttempts(this.config, requestConfig)
      .setRetryDelayMs(this.config, requestConfig)
      .setResponseValidation(this.config, requestConfig)
      .addPathParam({
        key: 'pullRequestId',
        value: pullRequestId,
      })
      .build();
    return this.client.call<PullRequestGet>(request);
  }

  /**
   * Updates an open pull request.
   * @param {string} pullRequestId - The pull request's ID.
   * @returns {Promise<HttpResponse<PullRequestUpdated>>} Successful Response
   */
  async updatePullRequest(
    pullRequestId: string,
    body: PullRequestUpdate,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<PullRequestUpdated>> {
    const request = new RequestBuilder<PullRequestUpdated>()
      .setConfig(this.config)
      .setBaseUrl(this.config)
      .setMethod('PUT')
      .setPath('/pull-requests/{pullRequestId}')
      .setRequestSchema(pullRequestUpdateRequest)
      .setResponseSchema(pullRequestUpdatedResponse)
      .setRequestContentType(ContentType.Json)
      .setResponseContentType(ContentType.Json)
      .setRetryAttempts(this.config, requestConfig)
      .setRetryDelayMs(this.config, requestConfig)
      .setResponseValidation(this.config, requestConfig)
      .addPathParam({
        key: 'pullRequestId',
        value: pullRequestId,
      })
      .addHeaderParam({ key: 'Content-Type', value: 'application/json' })
      .addBody(body)
      .build();
    return this.client.call<PullRequestUpdated>(request);
  }
}
