// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { mergeStatus } from './merge-status';

/**
 * The shape of the model inside the application code - what the users use
 */
export const merge = z.object({
  status: mergeStatus.optional(),
});

/**
 * Information about the current progress of the pull request's merge.
 * @typedef  {Merge} merge - Information about the current progress of the pull request's merge. - Information about the current progress of the pull request's merge.
 * @property {MergeStatus} - The pull request's current merge status:
- `inactive` — There is no merge in progress.
- `inprogress` — The pull request is currently merging.
- `failed` — The pull request's merge failed.

 */
export type Merge = z.infer<typeof merge>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const mergeResponse = z
  .object({
    status: mergeStatus.optional(),
  })
  .transform((data) => ({
    status: data['status'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const mergeRequest = z.object({ status: mergeStatus.nullish() }).transform((data) => ({
  status: data['status'],
}));
