// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse, RequestConfig } from '../../http/types';
import { RequestBuilder } from '../../http/transport/request-builder';
import { SerializationStyle } from '../../http/serialization/base-serializer';
import { GetAuthenticatedUser, getAuthenticatedUserResponse } from './models/get-authenticated-user';

export class UserService extends BaseService {
  /**
 * Gets information about the authenticated user.
**Note:**

This API returns a different response for users with the [Guest role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles).

 * @returns {Promise<HttpResponse<GetAuthenticatedUser>>} Successful Response
 */
  async getAuthenticatedUser(requestConfig?: RequestConfig): Promise<HttpResponse<GetAuthenticatedUser>> {
    const request = new RequestBuilder<GetAuthenticatedUser>()
      .setConfig(this.config)
      .setBaseUrl(this.config)
      .setMethod('GET')
      .setPath('/me')
      .setRequestSchema(z.any())
      .setResponseSchema(getAuthenticatedUserResponse)
      .setRequestContentType(ContentType.Json)
      .setResponseContentType(ContentType.Json)
      .setRetryAttempts(this.config, requestConfig)
      .setRetryDelayMs(this.config, requestConfig)
      .setResponseValidation(this.config, requestConfig)
      .build();
    return this.client.call<GetAuthenticatedUser>(request);
  }
}
