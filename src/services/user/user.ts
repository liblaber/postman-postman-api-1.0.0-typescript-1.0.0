// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse } from '../../http';
import { RequestConfig } from '../../http/types';
import { Request } from '../../http/transport/request';
import { GetAuthenticatedUser, getAuthenticatedUserResponse } from './models/get-authenticated-user';

export class UserService extends BaseService {
  /**
 * Gets information about the authenticated user.
**Note:**

This API returns a different response for users with the [Guest role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles).

 * @returns {Promise<HttpResponse<GetAuthenticatedUser>>} Successful Response
 */
  async getAuthenticatedUser(requestConfig?: RequestConfig): Promise<HttpResponse<GetAuthenticatedUser>> {
    const request = new Request({
      method: 'GET',
      path: '/me',
      config: this.config,
      responseSchema: getAuthenticatedUserResponse,
      requestSchema: z.any(),
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      requestConfig,
    });
    return this.client.call<GetAuthenticatedUser>(request);
  }
}
