// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const requestResponse = z.lazy(() => {
  return z.object({
    createdAt: z.string().optional(),
    createdBy: z.number().optional(),
    message: z.string().optional(),
  });
});

/**
 * Information about the response to the element's request. This object only returns when the network manager denied a request with a message.
 * @typedef  {RequestResponse} requestResponse - Information about the response to the element's request. This object only returns when the network manager denied a request with a message. - Information about the response to the element's request. This object only returns when the network manager denied a request with a message.
 * @property {string} - The date and time at which the network manager denied the request.
 * @property {number} - The network manager's user ID.
 * @property {string} - The network manager's request response message.
 */
export type RequestResponse = z.infer<typeof requestResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const requestResponseResponse = z.lazy(() => {
  return z
    .object({
      createdAt: z.string().optional(),
      createdBy: z.number().optional(),
      message: z.string().optional(),
    })
    .transform((data) => ({
      createdAt: data['createdAt'],
      createdBy: data['createdBy'],
      message: data['message'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const requestResponseRequest = z.lazy(() => {
  return z
    .object({ createdAt: z.string().nullish(), createdBy: z.number().nullish(), message: z.string().nullish() })
    .transform((data) => ({
      createdAt: data['createdAt'],
      createdBy: data['createdBy'],
      message: data['message'],
    }));
});
