// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { panCreateApi, panCreateApiRequest, panCreateApiResponse } from './pan-create-api';
import { panCreateCollection, panCreateCollectionRequest, panCreateCollectionResponse } from './pan-create-collection';
import { panCreateWorkspace, panCreateWorkspaceRequest, panCreateWorkspaceResponse } from './pan-create-workspace';
import { panCreateFolder, panCreateFolderRequest, panCreateFolderResponse } from './pan-create-folder';

/**
 * The shape of the model inside the application code - what the users use
 */
export const postPanElementOrFolderRequest = z.lazy(() => {
  return z.union([panCreateApi, panCreateCollection, panCreateWorkspace, panCreateFolder]);
});

/**
 *
 * @typedef  {PostPanElementOrFolderRequest} postPanElementOrFolderRequest
 * @property {PanCreateApi}
 * @property {PanCreateCollection}
 * @property {PanCreateWorkspace}
 * @property {PanCreateFolder}
 */
export type PostPanElementOrFolderRequest = z.infer<typeof postPanElementOrFolderRequest>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const postPanElementOrFolderRequestResponse = z.lazy(() => {
  return z.union([
    panCreateApiResponse,
    panCreateCollectionResponse,
    panCreateWorkspaceResponse,
    panCreateFolderResponse,
  ]);
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const postPanElementOrFolderRequestRequest = z.lazy(() => {
  return z.union([panCreateApiRequest, panCreateCollectionRequest, panCreateWorkspaceRequest, panCreateFolderRequest]);
});
