// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const web = z.object({
  href: z.string().optional(),
});

/**
 * An object containing web-based account references.
 * @typedef  {Web} web - An object containing web-based account references. - An object containing web-based account references.
 * @property {string} - A URL where you can download the invoice in PDF and view details.
 */
export type Web = z.infer<typeof web>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const webResponse = z
  .object({
    href: z.string().optional(),
  })
  .transform((data) => ({
    href: data['href'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const webRequest = z.object({ href: z.string().nullish() }).transform((data) => ({
  href: data['href'],
}));
