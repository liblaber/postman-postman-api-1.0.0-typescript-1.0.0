// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse } from '../../http';
import { RequestConfig } from '../../http/types';
import { Request } from '../../http/transport/request';
import { InvoicesAccountInfo, invoicesAccountInfoResponse } from './models/invoices-account-info';
import { GetAccountInvoices, getAccountInvoicesResponse } from './models/get-account-invoices';
import { GetAccountInvoicesParams } from './request-params';

export class BillingService extends BaseService {
  /**
   * Gets Postman billing account details for the given team.
   * @returns {Promise<HttpResponse<InvoicesAccountInfo>>} Successful Response
   */
  async getAccounts(requestConfig?: RequestConfig): Promise<HttpResponse<InvoicesAccountInfo>> {
    const request = new Request({
      method: 'GET',
      path: '/accounts',
      config: this.config,
      responseSchema: invoicesAccountInfoResponse,
      requestSchema: z.any(),
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      requestConfig,
    });
    return this.client.call<InvoicesAccountInfo>(request);
  }

  /**
   * Gets all invoices for a Postman billing account filtered by the status of the invoice.
   * @param {string} accountId - The account's ID.
   * @param {GetAccountInvoicesStatus} status - The account's status.
   * @returns {Promise<HttpResponse<GetAccountInvoices>>} Successful Response
   */
  async getAccountInvoices(
    accountId: string,
    params: GetAccountInvoicesParams,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<GetAccountInvoices>> {
    const request = new Request({
      method: 'GET',
      path: '/accounts/{accountId}/invoices',
      config: this.config,
      responseSchema: getAccountInvoicesResponse,
      requestSchema: z.any(),
      requestContentType: ContentType.Json,
      responseContentType: ContentType.Json,
      requestConfig,
    });
    request.addPathParam('accountId', accountId);
    request.addQueryParam('status', params?.status);
    return this.client.call<GetAccountInvoices>(request);
  }
}
