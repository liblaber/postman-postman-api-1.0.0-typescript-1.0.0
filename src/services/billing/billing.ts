// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { BaseService } from '../base-service';
import { ContentType, HttpResponse, RequestConfig } from '../../http/types';
import { RequestBuilder } from '../../http/transport/request-builder';
import { SerializationStyle } from '../../http/serialization/base-serializer';
import { InvoicesAccountInfo, invoicesAccountInfoResponse } from './models/invoices-account-info';
import { GetAccountInvoices, getAccountInvoicesResponse } from './models/get-account-invoices';
import { GetAccountInvoicesParams } from './request-params';

export class BillingService extends BaseService {
  /**
   * Gets Postman billing account details for the given team.
   * @returns {Promise<HttpResponse<InvoicesAccountInfo>>} Successful Response
   */
  async getAccounts(requestConfig?: RequestConfig): Promise<HttpResponse<InvoicesAccountInfo>> {
    const request = new RequestBuilder<InvoicesAccountInfo>()
      .setConfig(this.config)
      .setBaseUrl(this.config)
      .setMethod('GET')
      .setPath('/accounts')
      .setRequestSchema(z.any())
      .setResponseSchema(invoicesAccountInfoResponse)
      .setRequestContentType(ContentType.Json)
      .setResponseContentType(ContentType.Json)
      .setRetryAttempts(this.config, requestConfig)
      .setRetryDelayMs(this.config, requestConfig)
      .setResponseValidation(this.config, requestConfig)
      .build();
    return this.client.call<InvoicesAccountInfo>(request);
  }

  /**
   * Gets all invoices for a Postman billing account filtered by the status of the invoice.
   * @param {string} accountId - The account's ID.
   * @param {GetAccountInvoicesStatus} status - The account's status.
   * @returns {Promise<HttpResponse<GetAccountInvoices>>} Successful Response
   */
  async getAccountInvoices(
    accountId: string,
    params: GetAccountInvoicesParams,
    requestConfig?: RequestConfig,
  ): Promise<HttpResponse<GetAccountInvoices>> {
    const request = new RequestBuilder<GetAccountInvoices>()
      .setConfig(this.config)
      .setBaseUrl(this.config)
      .setMethod('GET')
      .setPath('/accounts/{accountId}/invoices')
      .setRequestSchema(z.any())
      .setResponseSchema(getAccountInvoicesResponse)
      .setRequestContentType(ContentType.Json)
      .setResponseContentType(ContentType.Json)
      .setRetryAttempts(this.config, requestConfig)
      .setRetryDelayMs(this.config, requestConfig)
      .setResponseValidation(this.config, requestConfig)
      .addPathParam({
        key: 'accountId',
        value: accountId,
      })
      .addQueryParam({
        key: 'status',
        value: params?.status,
      })
      .build();
    return this.client.call<GetAccountInvoices>(request);
  }
}
