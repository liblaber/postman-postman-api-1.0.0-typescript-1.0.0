// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const createApiVersionAcceptedResponse = z.object({
  id: z.string().optional(),
  createdAt: z.string().optional(),
  updatedAt: z.string().optional(),
  name: z.string().optional(),
  releaseNotes: z.string().optional(),
});

/**
 *
 * @typedef  {CreateApiVersionAcceptedResponse} createApiVersionAcceptedResponse
 * @property {string} - The version's ID.
 * @property {string} - The date and time at which the version was created.
 * @property {string} - The date and time at which the version was last updated.
 * @property {string} - The version's name.
 * @property {string} - Information about the API version release. For example, changelog notes.
 */
export type CreateApiVersionAcceptedResponse = z.infer<typeof createApiVersionAcceptedResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const createApiVersionAcceptedResponseResponse = z
  .object({
    id: z.string().optional(),
    createdAt: z.string().optional(),
    updatedAt: z.string().optional(),
    name: z.string().optional(),
    releaseNotes: z.string().optional(),
  })
  .transform((data) => ({
    id: data['id'],
    createdAt: data['createdAt'],
    updatedAt: data['updatedAt'],
    name: data['name'],
    releaseNotes: data['releaseNotes'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const createApiVersionAcceptedResponseRequest = z
  .object({
    id: z.string().nullish(),
    createdAt: z.string().nullish(),
    updatedAt: z.string().nullish(),
    name: z.string().nullish(),
    releaseNotes: z.string().nullish(),
  })
  .transform((data) => ({
    id: data['id'],
    createdAt: data['createdAt'],
    updatedAt: data['updatedAt'],
    name: data['name'],
    releaseNotes: data['releaseNotes'],
  }));
