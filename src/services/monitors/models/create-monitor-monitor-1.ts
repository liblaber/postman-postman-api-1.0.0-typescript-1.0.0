// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { monitorSchedule1, monitorSchedule1Request, monitorSchedule1Response } from './monitor-schedule-1';

/**
 * The shape of the model inside the application code - what the users use
 */
export const createMonitorMonitor1: any = z.lazy(() => {
  return z.object({
    collection: z.string().optional(),
    environment: z.string().optional(),
    name: z.string().optional(),
    schedule: monitorSchedule1.optional(),
  });
});

/**
 *
 * @typedef  {CreateMonitorMonitor1} createMonitorMonitor1
 * @property {string} - The unique ID of the monitor's associated collection.
 * @property {string} - The unique ID of the monitor's associated environment.
 * @property {string} - The monitor's name.
 * @property {MonitorSchedule1} - Information about the monitor's schedule.
 */
export type CreateMonitorMonitor1 = z.infer<typeof createMonitorMonitor1>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const createMonitorMonitor1Response: any = z.lazy(() => {
  return z
    .object({
      collection: z.string().optional(),
      environment: z.string().optional(),
      name: z.string().optional(),
      schedule: monitorSchedule1Response.optional(),
    })
    .transform((data) => ({
      collection: data['collection'],
      environment: data['environment'],
      name: data['name'],
      schedule: data['schedule'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const createMonitorMonitor1Request: any = z.lazy(() => {
  return z
    .object({
      collection: z.string().nullish(),
      environment: z.string().nullish(),
      name: z.string().nullish(),
      schedule: monitorSchedule1Request.nullish(),
    })
    .transform((data) => ({
      collection: data['collection'],
      environment: data['environment'],
      name: data['name'],
      schedule: data['schedule'],
    }));
});
